name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
#   APP_NAME: hello-world-py
  APP_PORT: 8080

jobs:

  build-image:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
    - name: Build the Docker image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: hello-world-py
        dockerfiles: |
          ./Dockerfile
      
#     - name: Log in to docker
#       uses: redhat-actions/podman-login@v1
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
#         registry: docker.io

#     - name: Push To dockerhub
#       id: push-to-dockerhub
#       uses: redhat-actions/push-to-registry@v2
#       with:
#         image: ${{ steps.build-image.outputs.image }}
#         registry: docker.io/avtarmarway/
        
        
  run-aqua-chainbench:

    runs-on: ubuntu-latest
    needs: build-image

    steps:
    
      - name: Chain Bench
        id: chain-bench
        uses: aquasecurity/chain-bench-action@v1.0.0
        with:
          repository-url: ${{ github.server_url }}/${{ github.repository }} 
          github-token: ${{ secrets.GITHUB_TOKEN }}
          scm-platform: github #Optional parameter for dedicated SCM servers

      # Using the github action output from the scan step "chain-bench-result" (JSON so you can run rego/jq against it)
      - name: Echo
        run: echo ${{ steps.chain-bench.outputs.chain-bench-result }}

  deploy-image:

    runs-on: ubuntu-latest
    needs: run-aqua-chainbench
    steps:

    - name: Log in to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: docker.io
    
    - name: Docker Push
      uses: redhat-actions/push-to-registry@v2.7
      with:
        image: avtarmarway/hello-world-py
        registry: docker.io

  run-aqua-trivvy-scan:

    runs-on: ubuntu-latest
    needs: deploy-image

    steps:
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/avtarmarway/hello-world-py:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'
